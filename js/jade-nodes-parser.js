// Generated by CoffeeScript 1.9.1
var attr_has_value, find_tags;

module.exports.attrHasValue = attr_has_value = function(node, attr, forgiving) {
  var attr_inf, i, len, ref, value;
  ref = node.attrs;
  for (i = 0, len = ref.length; i < len; i++) {
    attr_inf = ref[i];
    if (String(attr_inf.name).toLowerCase() === attr) {
      if (forgiving) {
        return true;
      }
      value = String(attr_inf.val).trim();
      if ((value[0] === '\'' && value.substr(value.length - 1) === '\'') || (value[0] === '"' && value.substr(value.length - 1) === '"')) {
        value = value.substr(1, value.length - 2).trim();
      }
      return !!value;
    }
  }
  return false;
};

module.exports.findTags = find_tags = function(nodes, tag) {
  var base, i, len, node, ref, tag_name, tags;
  if (!nodes._tags) {
    tags = nodes._tags = {};
    for (i = 0, len = nodes.length; i < len; i++) {
      node = nodes[i];
      if (tag_name = (ref = node.name) != null ? ref.toLowerCase() : void 0) {
        (tags[tag_name] != null ? tags[tag_name] : tags[tag_name] = []).push(node);
      }
    }
  }
  return (base = nodes._tags)[tag] != null ? base[tag] : base[tag] = [];
};

module.exports.tagsWithNoAttrValue = function(nodes, tag, attr, forgiving) {
  var i, len, node, ref, res;
  res = [];
  ref = find_tags(nodes, tag);
  for (i = 0, len = ref.length; i < len; i++) {
    node = ref[i];
    if (!attr_has_value(node, attr, forgiving)) {
      res.push(node);
    }
  }
  return res;
};
