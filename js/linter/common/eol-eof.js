// Generated by CoffeeScript 1.9.1
var LintWarning;

LintWarning = require('../../warning/lint-warning');

module.exports = function(inf) {
  var cr_found, desc, i, idx, j, last, last_count, len, line, lines, max_line_len, pos, title, trimmed, warn;
  lines = inf.source.split('\n');
  warn = function(code, desc, line, col) {
    var title;
    title = 'Lint Warning' + (code ? ' (' + code + ')' : '');
    return inf.res.warnings.push(new LintWarning(inf, {}, [line, col], desc, title));
  };
  if (inf.maxLineLength === true) {
    max_line_len = 80;
  } else if (inf.maxLineLength > 0 && parseInt(inf.maxLineLength, 10) === Number(inf.maxLineLength)) {
    max_line_len = Number(inf.maxLineLength);
  }
  for (i = j = 0, len = lines.length; j < len; i = ++j) {
    line = lines[i];
    if ((!cr_found) && line.substr(line.length - 1) === '\r') {
      cr_found = true;
      warn('EOL', 'CR (\'\\r\') character found at end of line', i, line.length - 1);
    }
    if ((!(trimmed = line.trim())) && line) {
      warn('WSLN', 'Line contains white spaces only', i, 0);
    } else if ((idx = line.indexOf(trimmed) + trimmed.length) < line.length) {
      warn('EOLWS', 'Line has trailing white space', i, idx);
    } else if (max_line_len && line.length > max_line_len) {
      warn('MAXLN', 'Line length exceeds ' + max_line_len, i, max_line_len);
    }
  }
  if (inf.source.substr(last = inf.source.length - 1) !== '\n') {
    title = 'Lint Warning (EOF)';
    desc = 'Missing enter character at end of file';
    pos = [lines.length - 1, lines[lines.length - 1].length];
    return inf.res.warnings.push(new LintWarning(inf, {}, pos, desc, title));
  } else {
    last_count = 1;
    while (inf.source.substr(last - last_count, 1) === '\n') {
      last_count += 1;
    }
    if (last_count > 1) {
      title = 'Lint Warning (EOFX)';
      desc = 'Unnecessary empty lines at end of file';
      pos = [lines.length - last_count, 0];
      return inf.res.warnings.push(new LintWarning(inf, {}, pos, desc, title));
    }
  }
};
