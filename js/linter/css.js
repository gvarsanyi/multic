// Generated by CoffeeScript 1.9.1
var LintError, LintWarning, eol_eof, linter;

LintError = require('../error/lint-error');

LintWarning = require('../warning/lint-warning');

eol_eof = require('./common/eol-eof');

linter = require('csslint').CSSLint.verify;

module.exports = function(inf, cb) {
  var cfg, data, desc, err, i, len, message, msg, pos, ref, ref1, title;
  try {
    cfg = {
      'star-property-hack': true,
      'underscore-property-hack': true,
      'import': true,
      'universal-selector': true,
      'overqualified-elements': true,
      'zero-units': true,
      'unqualified-attributes': true,
      'ids': true,
      'important': true
    };
    data = linter(inf.source, cfg);
    ref = data != null ? data.messages : void 0;
    for (i = 0, len = ref.length; i < len; i++) {
      msg = ref[i];
      pos = LintError.parsePos(msg.line, msg.col, -1, -1);
      message = String(msg.message).split(' at line ')[0];
      desc = message;
      title = (ref1 = msg.rule) != null ? ref1.name : void 0;
      if (msg.type === 'error') {
        inf.res.errors.push(new LintError(inf, msg, pos, desc, title));
      } else {
        inf.res.warnings.push(new LintWarning(inf, msg, pos, desc, title));
      }
    }
    eol_eof(inf);
  } catch (_error) {
    err = _error;
    inf.res.errors.push(new LintError(inf, err));
  }
  return cb();
};
